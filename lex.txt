IDENTIFIER = r"[a-zA-Z].\w*"
DEC_LITERAL = r"\d.[1-9]*"
SPACE = r"\s+"

UNARY_RIGHT_OP = "+" | "-"
BINARY_OP = "+" | "-" | "*" | "/" | "%" | "&&" | "||" | "!" | "==" | ">" | "<"

EXPRESSION = UNARY_RIGHT_OP EXPRESSION | EXPRESSION BINARY_OP EXPRESSION | "(" EXPRESSION ")" | IDENTIFIER "(" ")"

VAR_DEF = "var " IDENTIFIER [ "=" EXPRESSION ]
FUNC_DEF = "def " IDENTIFIER "(" ")" SCOPE
ASSIGNMENT = IDENTIFIER "=" EXPRESSION
INPUT = "input " IDENTIFIER
OUTPUT = "output " IDENTIFIER
RETURN = "return " IDENTIFIER

STATEMENT = VAR_DEF | FUNC_DEF | ASSIGNMENT | INPUT | OUTPUT | RETURN | empty
SCOPE = "{" PROGRAM "}"

ELSE_BLOCK = "else" SCOPE
IF_BLOCK = "if" "(" EXPRESSION ")" SCOPE [ELSE_BLOCK]
WHILE_BLOCK = "while" "(" EXPRESSION ")" SCOPE

BLOCK = IF_BLOCK | WHILE_BLOCK
SEGMENT = BLOCK | STATEMENT ";"
PROGRAM = {SEGMENT}